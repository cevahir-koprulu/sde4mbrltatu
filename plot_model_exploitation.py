import matplotlib.pyplot as plt
import numpy as np
import os

info_dict = {
    "halfcheetah-random-v2": {
        "tatu_mopo_sde": {  
            "config": {
                "RL": 20,
                "CVaR": 1,
                "RPC": 0.001,
            },
            "seeds": {
                32: "hc_rand_final_diff=True_cvar=1.0_tdv=diff_density_rl=20_rpc=0.001_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=32_0520_171344",
                62: "hc_rand_final_diff=True_cvar=1.0_tdv=diff_density_rl=20_rpc=0.001_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=62_0520_171425",
                92: "hc_rand_final_diff=True_cvar=1.0_tdv=diff_density_rl=20_rpc=0.001_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=92_0520_171432",
                122: "hc_rand_final_diff=True_cvar=1.0_tdv=diff_density_rl=20_rpc=0.001_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=122_0520_171434",
                152: "hc_rand_final_diff=True_cvar=1.0_tdv=diff_density_rl=20_rpc=0.001_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=152_0520_171451",
            },
        },
        "tatu_mopo":{
            "config": {
                "RL": 5,
                "PC": 2,
                "RPC": 1,
            },
            "seeds": {
                32: "critic_num_2_seed_32_0518_155708-halfcheetah_random_v2_tatu_mopo",
                62: "critic_num_2_seed_62_0518_155712-halfcheetah_random_v2_tatu_mopo",
                92: "critic_num_2_seed_92_0518_155715-halfcheetah_random_v2_tatu_mopo",
                122: "critic_num_2_seed_122_0518_155716-halfcheetah_random_v2_tatu_mopo",
                152: "critic_num_2_seed_152_0518_155719-halfcheetah_random_v2_tatu_mopo",
            },
        },
        "mopo":{
            "config": {
                "RL": 5,
                "RPC": 0.5,
            },
            "seeds": {
                32: "critic_num_2_seed_32_0519_152820_pc=1e-06-halfcheetah_random_v2_tatu_mopo",
                62: "critic_num_2_seed_62_0519_152840_pc=1e-06-halfcheetah_random_v2_tatu_mopo",
                92: "critic_num_2_seed_92_0519_152843_pc=1e-06-halfcheetah_random_v2_tatu_mopo",
                122: "critic_num_2_seed_122_0519_152858_pc=1e-06-halfcheetah_random_v2_tatu_mopo",
                152: "critic_num_2_seed_152_0519_152907_pc=1e-06-halfcheetah_random_v2_tatu_mopo",
            },
        },
    },
    "halfcheetah-medium-v2": {
        "tatu_mopo_sde": {
            "config": {
                "RL": 5,
                "CVaR": 0.99,
                "RPC": 1,
            },
            "seeds": {
                32: "hc_m_final_diff=True_cvar=0.99_tdv=diff_density_rl=5_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=32_0520_171554",
                62: "hc_m_final_diff=True_cvar=0.99_tdv=diff_density_rl=5_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=62_0520_171608",
                92: "hc_m_final_diff=True_cvar=0.99_tdv=diff_density_rl=5_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=92_0520_171614",
                122: "hc_m_final_diff=True_cvar=0.99_tdv=diff_density_rl=5_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=122_0520_171624",
                152: "hc_m_final_diff=True_cvar=0.99_tdv=diff_density_rl=5_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=152_0520_171628",
            },
        },
        "tatu_mopo":{
            "config": {
                "RL": 5,
                "PC": 2,
                "RPC": 1,
            },
            "seeds": {
                32: "critic_num_2_seed_32_0518_155450-halfcheetah_medium_v2_tatu_mopo",
                62: "critic_num_2_seed_62_0518_155501-halfcheetah_medium_v2_tatu_mopo",
                92: "critic_num_2_seed_92_0518_155509-halfcheetah_medium_v2_tatu_mopo",
                122: "critic_num_2_seed_122_0518_155514-halfcheetah_medium_v2_tatu_mopo",
                152: "critic_num_2_seed_152_0518_155524-halfcheetah_medium_v2_tatu_mopo",
            },
        },
        "mopo":{
            "config": {
                "RL": 1,
                "RPC": 1,
            },
            "seeds": {
                32: "critic_num_2_seed_32_0519_153029_pc=1e-06-halfcheetah_medium_v2_tatu_mopo",
                62: "critic_num_2_seed_62_0519_153032_pc=1e-06-halfcheetah_medium_v2_tatu_mopo",
                92: "critic_num_2_seed_92_0519_153040_pc=1e-06-halfcheetah_medium_v2_tatu_mopo",
                122: "critic_num_2_seed_122_0519_153053_pc=1e-06-halfcheetah_medium_v2_tatu_mopo",
                152: "critic_num_2_seed_152_0519_153056_pc=1e-06-halfcheetah_medium_v2_tatu_mopo",
            },
        },
    },
    "halfcheetah-medium-replay-v2": {
        "tatu_mopo_sde": {
            "config": {
                "RL": 5,
                "CVaR": 0.9,
                "RPC": 1,
            },
            "seeds": {
                32: "hc_mr_final_diff=True_cvar=0.9_tdv=diff_density_rl=5_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=32_0520_171705",
                62: "hc_mr_final_diff=True_cvar=0.9_tdv=diff_density_rl=5_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=62_0520_171711",
                92: "hc_mr_final_diff=True_cvar=0.9_tdv=diff_density_rl=5_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=92_0520_171724",
                122: "hc_mr_final_diff=True_cvar=0.9_tdv=diff_density_rl=5_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=122_0520_171727",
                152: "hc_mr_final_diff=True_cvar=0.9_tdv=diff_density_rl=5_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=152_0520_171736",

            },
        },
        "tatu_mopo":{
            "config": {
                "RL": 5,
                "PC": 2,
                "RPC": 1,
            },
            "seeds": {
                32: "critic_num_2_seed_32_0518_155620-halfcheetah_medium_replay_v2_tatu_mopo",
                62:  "critic_num_2_seed_62_0518_155545-halfcheetah_medium_replay_v2_tatu_mopo",
                92: "critic_num_2_seed_92_0518_155548-halfcheetah_medium_replay_v2_tatu_mopo",
                122: "critic_num_2_seed_122_0518_155550-halfcheetah_medium_replay_v2_tatu_mopo",
                152: "critic_num_2_seed_152_0518_155555-halfcheetah_medium_replay_v2_tatu_mopo",
            },
        },
        "mopo":{
            "config": {
                "RL": 5,
                "RPC": 1,
            },
            "seeds": {
                32: "critic_num_2_seed_32_0519_153143_pc=1e-06-halfcheetah_medium_replay_v2_tatu_mopo",
                62: "critic_num_2_seed_62_0519_153149_pc=1e-06-halfcheetah_medium_replay_v2_tatu_mopo",
                92: "critic_num_2_seed_92_0519_153212_pc=1e-06-halfcheetah_medium_replay_v2_tatu_mopo",
                122: "critic_num_2_seed_122_0519_153216_pc=1e-06-halfcheetah_medium_replay_v2_tatu_mopo",
                152:  "critic_num_2_seed_152_0519_153224_pc=1e-06-halfcheetah_medium_replay_v2_tatu_mopo",
            },
        },
    },
    "halfcheetah-medium-expert-v2": {
        "tatu_mopo_sde": {
            "config": {
                "RL": 10,
                "CVaR": 0.95,
                "RPC": 1,
            },
            "seeds": {
                32: "hc_me_final_diff=True_cvar=0.95_tdv=diff_density_rl=10_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=32_0520_171831",
                62: "hc_me_final_diff=True_cvar=0.95_tdv=diff_density_rl=10_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=62_0520_171851",
                92: "hc_me_final_diff=True_cvar=0.95_tdv=diff_density_rl=10_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=92_0520_171904",
                122: "hc_me_final_diff=True_cvar=0.95_tdv=diff_density_rl=10_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=122_0520_171909",
                152: "hc_me_final_diff=True_cvar=0.95_tdv=diff_density_rl=10_rpc=1.0_rr=0.05_ep=1000_rfq=1000_spe=1000_alr=0.0003_clr=0.0003_seed=122_0520_171909",
            },
        },
        "tatu_mopo":{
            "config": {
                "RL": 5,
                "PC": 2,
                "RPC": 1,
            },
            "seeds": {
                32: "critic_num_2_seed_32_0518_155659-halfcheetah_medium_expert_v2_tatu_mopo",
                62: "critic_num_2_seed_62_0518_155702-halfcheetah_medium_expert_v2_tatu_mopo",
                92: "critic_num_2_seed_92_0518_155703-halfcheetah_medium_expert_v2_tatu_mopo",
                122: "critic_num_2_seed_122_0518_155708-halfcheetah_medium_expert_v2_tatu_mopo",
                152: "critic_num_2_seed_152_0518_155712-halfcheetah_medium_expert_v2_tatu_mopo",
            },
        },
        "mopo":{
            "config": {
                "RL": 5,
                "RPC": 1,
            },
            "seeds": {
                32: "critic_num_2_seed_32_0519_153307_pc=1e-06-halfcheetah_medium_expert_v2_tatu_mopo",
                62: "critic_num_2_seed_62_0519_153330_pc=1e-06-halfcheetah_medium_expert_v2_tatu_mopo",
                92: "critic_num_2_seed_92_0519_153335_pc=1e-06-halfcheetah_medium_expert_v2_tatu_mopo",
                122: "critic_num_2_seed_122_0519_153339_pc=1e-06-halfcheetah_medium_expert_v2_tatu_mopo",
                152: "critic_num_2_seed_152_0519_153343_pc=1e-06-halfcheetah_medium_expert_v2_tatu_mopo",
            },
        },
    },
}

info_dict_dset_labels = {
    "halfcheetah-random-v2": "random",
    "halfcheetah-medium-v2": "medium",
    "halfcheetah-medium-replay-v2": "edium-replay",
    "halfcheetah-medium-expert-v2": "medium-expert",
}

algo_info = {
    "tatu_mopo_sde": {
        "label": "TATU+MOPO",
        "color": "red",
    },
    "tatu_mopo": {
        "label": "TATU+MOPO",
        "color": "blue",
    },
    "mopo": {
        "label": "MOPO",
        "color": "green",
    },
}

dir_path = "log"

result_dict = {}
for dataset, dataset_dict in info_dict.items():
    result_dict[dataset] = {}
    for algo, algo_dict in dataset_dict.items():
        result_dict[dataset][algo] = {}
        gt = []
        pess = []
        for seed, seed_path in algo_dict["seeds"].items():
            algo_path = algo if algo != "mopo" else "tatu_mopo"
            with open(os.path.join(f"log/{dataset}/{algo_path}", seed_path, "fake_eval_full=False.txt"), "r") as f:
                lines = f.readlines()
                for line in lines:
                    if "fake_best_eval_mean:" in line:
                        pess.append(float(line.split(" ")[1]))
                    elif "fake_best_eval_mean_unpen:" in line:
                        gt.append(float(line.split(" ")[1]))
        result_dict[dataset][algo]["gt"] = {
            "mean": np.mean(gt),
            "std": np.std(gt),
        }
        result_dict[dataset][algo]["pess"] = {
            "mean": np.mean(pess),
            "std": np.std(pess),
        }

x = np.arange(len(info_dict.keys()))  # the label locations
width = 0.075  # the width of the bars
multiplier = 0

fig, ax = plt.subplots(figsize=(15,6), layout='constrained')
label_count = 0
dataset_list = list(info_dict.keys())
for dataset in dataset_list:
    for algo in info_dict[dataset].keys():
        if label_count == 0:
            rects = ax.bar(width * multiplier, result_dict[dataset][algo]["gt"]["mean"], width, 
                           yerr=result_dict[dataset][algo]["gt"]["std"], label=algo_info[algo]["label"], 
                           edgecolor='black', color=algo_info[algo]["color"])
            ax.bar_label(rects, padding=3, fontsize=11)
            rects = ax.bar(width * (multiplier+1), result_dict[dataset][algo]["pess"]["mean"], width,
                            yerr=result_dict[dataset][algo]["pess"]["std"],
                            edgecolor='black', hatch="//", color=algo_info[algo]["color"])
            ax.bar_label(rects, padding=3, fontsize=11)
        else:
            rects = ax.bar(width * multiplier, result_dict[dataset][algo]["gt"]["mean"], width, 
                           yerr=result_dict[dataset][algo]["gt"]["std"], edgecolor='black', color=algo_info[algo]["color"])
            ax.bar_label(rects, padding=3, fontsize=11)
            rects = ax.bar(width * (multiplier+1), result_dict[dataset][algo]["pess"]["mean"], width,
                            yerr=result_dict[dataset][algo]["pess"]["std"], edgecolor='black', hatch="//", color=algo_info[algo]["color"])
            ax.bar_label(rects, padding=3, fontsize=11)
        multiplier += 2
    multiplier += 1
    label_count += 1

# Add some text for labels, title and custom x-axis tick labels, etc.
ax.set_ylabel('Average reward per transition')
# ax.set_title('Penguin attributes by species')
offsets = [3*width + i*(width*6) + (i-0.5)*width  for i in range(len(list(info_dict_dset_labels.keys())))]
ax.set_xticks(offsets, list(info_dict_dset_labels.keys()))
# draw a line at zero
ax.axhline(0, color='black', linewidth=0.5)
ax.legend(loc='upper left', ncols=3)
ax.set_ylim(-2, 10)

plt.savefig("comparison_model_exploitation_per_transition.png", dpi=1000)